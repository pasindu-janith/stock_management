/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock_management;

import com.stock.common.DateAndTime;
import com.stock.db.DB;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pasindu hathurushigh
 */
public class PurchaseOrder extends javax.swing.JFrame {

    /**
     * Creates new form PurchaseOrder
     */
    public PurchaseOrder() {
        initComponents();
        generatePOno();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_pono = new javax.swing.JTextField();
        txt_supplierid = new javax.swing.JTextField();
        txt_suppliername = new javax.swing.JTextField();
        txt_itemid = new javax.swing.JTextField();
        txt_itemname = new javax.swing.JTextField();
        txt_unitprice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        txt_qty = new javax.swing.JTextField();
        txt_company = new javax.swing.JTextField();
        txt_branch = new javax.swing.JTextField();
        txt_category = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase Order");

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setText("PO No");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText(" ID");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Item ID");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Item Name");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Unit Price(Purchase)");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Purchase Qty");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setText("      PURCHASE ORDER");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item ID", "Item Name", "Unit Price", "Quantity", "Subtotal"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        txt_pono.setEditable(false);
        txt_pono.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        txt_supplierid.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txt_supplierid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_supplieridActionPerformed(evt);
            }
        });

        txt_suppliername.setEditable(false);
        txt_suppliername.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txt_itemid.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txt_itemid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_itemidActionPerformed(evt);
            }
        });
        txt_itemid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_itemidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_itemidKeyTyped(evt);
            }
        });

        txt_itemname.setEditable(false);
        txt_itemname.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txt_unitprice.setEditable(false);
        txt_unitprice.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel9.setText("Total");

        txt_total.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        txt_total.setText("0.0");
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Delivery Date");

        txt_qty.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txt_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_qtyActionPerformed(evt);
            }
        });

        txt_company.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txt_branch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txt_category.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel11.setText("Supplier");

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel12.setText("Item");

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel13.setText("Company");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_supplierid, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_suppliername, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                        .addComponent(jLabel13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(91, 91, 91)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_company)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_branch, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_itemid, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_pono)))
                                .addGap(24, 24, 24)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_itemname, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_category, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_unitprice, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_pono, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_supplierid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_suppliername, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_company, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_branch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txt_itemid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_itemname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_unitprice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_category, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel10)
                        .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_supplieridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_supplieridActionPerformed
        try {
            ResultSet rs = DB.search("SELECT `fname`,`lname`,`company_branch_id` FROM supplier WHERE `nic`='"
                    + txt_supplierid.getText() + "' AND status='1'");
            if (rs.next()) {
                txt_suppliername.setForeground(Color.BLACK);
                String name = rs.getString("fname") + " " + rs.getString("lname");
                ResultSet rs_com = DB.search("SELECT `company_name`,`branch_name` FROM company c INNER JOIN "
                        + "branch b ON b.`company_id`=c.`company_id` WHERE b.`branch_id`='"
                        + rs.getString("company_branch_id") + "'");
                if (rs_com.next()) {
                    txt_company.setText(rs_com.getString("company_name"));
                    txt_branch.setText(rs_com.getString("branch_name"));
                }
                txt_suppliername.setText(name);
                txt_itemid.grabFocus();
            } else {
                Color red = new Color(255, 0, 0);
                txt_suppliername.setForeground(red);
                txt_suppliername.setText("INVALID SUPPLIER ID");
                txt_supplierid.setText(null);
                txt_supplierid.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_supplieridActionPerformed

    private void txt_itemidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_itemidActionPerformed
        try {
            if (!txt_itemid.getText().equals("")) {
                ResultSet rs = DB.search("SELECT * FROM product WHERE `code`='" + txt_itemid.getText() + "'");
                if (rs.next()) {
                    ResultSet rs_brand = DB.search("SELECT * FROM brand WHERE `id`='"
                            + rs.getString("brand") + "'");
                    if (rs_brand.next()) {
                        txt_itemname.setForeground(Color.BLACK);
                        String itemname = rs_brand.getString("name") + " "
                                + rs.getString("name") + rs.getString("weight") + "g";
                        txt_itemname.setText(itemname);
                        txt_unitprice.setText("" + rs.getDouble("buyprice"));
                        txt_qty.grabFocus();
                    }
                } else {
                    txt_itemname.setForeground(Color.RED);
                    txt_itemname.setText("NO PRODUCT FOUND");
                    txt_itemid.setText(null);
                    txt_itemid.grabFocus();
                }
            } else {
                txt_itemname.setForeground(Color.RED);
                txt_itemname.setText("ENTER ITEM ID");
                txt_itemid.setText(null);
                txt_itemid.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_txt_itemidActionPerformed

    private void txt_itemidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_itemidKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txt_total.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            ProductSearch ps = new ProductSearch(this);
            ps.setVisible(true);
        }
    }//GEN-LAST:event_txt_itemidKeyReleased

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        try {
            if (jDateChooser1.getDate() != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                Date date = jDateChooser1.getDate();
                String formatdate = sdf.format(date);
                DB.push("INSERT INTO po VALUES('"
                        + txt_pono.getText() + "','"
                        + DateAndTime.getDate() + "','"
                        + txt_supplierid.getText() + "','"
                        + formatdate + "','1')");
                for (int row = 0; row < jTable1.getRowCount(); row++) {
                    DB.push("INSERT INTO poitem VALUES('"
                            + txt_pono.getText() + "','"
                            + dtm.getValueAt(row, 0) + "','"
                            + dtm.getValueAt(row, 3) + "')");
                }
                clearPO();
            } else {
                JOptionPane.showMessageDialog(this, "Enter delivery date");
                jDateChooser1.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_totalActionPerformed

    private void txt_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_qtyActionPerformed
        if (!txt_qty.getText().equals("") && Double.parseDouble(txt_qty.getText()) > 0.0) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            Vector v = new Vector();
            double unitprice = Double.parseDouble(txt_unitprice.getText());
            double qty = Double.parseDouble(txt_qty.getText());
            double checkedQty = checkRowRepeating(txt_itemid.getText());
            if (checkedQty != 0) {
                qty += checkedQty;
            }
            double subtotal = unitprice * qty;
            v.add(txt_itemid.getText());
            v.add(txt_itemname.getText());
            v.add(unitprice);
            v.add(qty);
            v.add(subtotal);
            dtm.addRow(v);
            calculateTotal();
            clearFields();
            txt_itemid.grabFocus();
        }
    }//GEN-LAST:event_txt_qtyActionPerformed

    private void txt_itemidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_itemidKeyTyped
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txt_itemidKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_branch;
    private javax.swing.JTextField txt_category;
    private javax.swing.JTextField txt_company;
    public javax.swing.JTextField txt_itemid;
    private javax.swing.JTextField txt_itemname;
    private javax.swing.JTextField txt_pono;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_supplierid;
    private javax.swing.JTextField txt_suppliername;
    private javax.swing.JTextField txt_total;
    private javax.swing.JTextField txt_unitprice;
    // End of variables declaration//GEN-END:variables

    private void generatePOno() {
        try {
            ResultSet rs = DB.search("SELECT COUNT(POno) as pocount FROM PO");
            if (rs.next()) {
                int count = rs.getInt("pocount");
                int poNo = ++count;
                txt_pono.setText("" + poNo);
            }
            txt_supplierid.grabFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void calculateTotal() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        double total = 0;
        for (int row = 0; row < dtm.getRowCount(); row++) {
            double subtotal = Double.parseDouble(dtm.getValueAt(row, 4).toString());
            total += subtotal;
        }
        txt_total.setText("" + total);
    }

    private double checkRowRepeating(String itemcode) {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        double checkedqty = 0;
        for (int row = 0; row < jTable1.getRowCount(); row++) {
            if (itemcode.equals(dtm.getValueAt(row, 0))) {
                checkedqty = Double.parseDouble(dtm.getValueAt(row, 3).toString());
                dtm.removeRow(row);
                break;
            }
        }
        return checkedqty;
    }

    private void clearFields() {
        txt_itemid.setText(null);
        txt_itemname.setText(null);
        txt_unitprice.setText(null);
        txt_qty.setText(null);

    }

    private void clearPO() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        generatePOno();
        txt_supplierid.setText(null);
        txt_suppliername.setText(null);
        txt_total.setText("0.0");
        jDateChooser1.setDate(null);
        dtm.setRowCount(0);
    }
}
