/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock_management;

import com.stock.common.MD5;
import com.stock.common.SystemConfigData;
import com.stock.db.DB;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author pasindu hathurushigh
 */
public class SystemUserManagement extends javax.swing.JFrame {

    /**
     * Creates new form SystemUserManagement
     */
    public SystemUserManagement() {
        initComponents();
        loadUserType();
        loadEmployee();
        try {
            ResultSet rs = DB.search("SELECT e.`fname`,e.`lname`,e.`empid`,u.`usertype` FROM employee e "
                    + "INNER JOIN user u ON e.`empid`=u.`userid` WHERE `empid`='"
                    + SystemConfigData.getActEmpId() + "'");
            if (rs.next()) {
                combo_employee.setSelectedItem(SystemConfigData.getActEmpId() + "-"
                        + rs.getString("fname") + " " + rs.getString("lname"));
                combo_usertype.setSelectedItem(rs.getString("usertype") + "-"
                        + SystemConfigData.getActUsertype());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        txt_username.setText(SystemConfigData.getActUsername());
        if (SystemConfigData.getActUsertype().equals("ADMIN")) {
            combo_employee.setEnabled(true);
            combo_usertype.setEnabled(true);
            rad_active.setVisible(true);
            rad_inactive.setVisible(true);
        } else {
            combo_employee.setEnabled(false);
            combo_usertype.setEnabled(false);
            rad_active.setVisible(false);
            rad_inactive.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        txt_repassword = new javax.swing.JPasswordField();
        btn_save = new javax.swing.JButton();
        combo_usertype = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combo_employee = new javax.swing.JComboBox<>();
        rad_active = new javax.swing.JRadioButton();
        rad_inactive = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("System User Management");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Repassword");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Password");

        btn_save.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_save.setText("Save");
        btn_save.setFocusPainted(false);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        combo_usertype.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        combo_usertype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Usertype");

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setText("Username");

        txt_username.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txt_username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_usernameMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Password should be have at least 4 characters");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SAVE A USERNAME AND PASSWORD TO YOUR LOGGING ACOUNT");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Employee");

        combo_employee.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        combo_employee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_employeeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rad_active);
        rad_active.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        rad_active.setSelected(true);
        rad_active.setText("Active");
        rad_active.setContentAreaFilled(false);
        rad_active.setFocusPainted(false);

        buttonGroup1.add(rad_inactive);
        rad_inactive.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        rad_inactive.setText("Inactive");
        rad_inactive.setContentAreaFilled(false);
        rad_inactive.setFocusPainted(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_username)
                            .addComponent(combo_usertype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_employee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(rad_active)
                                            .addGap(66, 66, 66)
                                            .addComponent(rad_inactive))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_repassword, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                                            .addComponent(txt_password))))))))
                .addContainerGap(55, Short.MAX_VALUE))
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combo_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_usertype, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_repassword, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rad_active)
                    .addComponent(rad_inactive))
                .addGap(18, 18, 18)
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        String hashPassword = MD5.getMd5(new String(txt_password.getPassword()));
        String hashRepassword = MD5.getMd5(new String(txt_repassword.getPassword()));
        int status = (rad_active.isSelected()) ? 1 : 0;
        if (combo_employee.getSelectedItem().toString().split("-")[0].equals(SystemConfigData.getActEmpId())) {

            if (!txt_username.getText().equals("") && txt_username.getText() != null
                    && !txt_password.getPassword().equals("") && txt_password.getPassword() != null
                    && !txt_repassword.getPassword().equals("") && txt_repassword.getPassword() != null) {

                if (new String(txt_password.getPassword()).length() >= 5) {

                    if (hashPassword.equals(hashRepassword)) {
                        String usertype = combo_usertype.getSelectedItem().toString().split("-")[0];
                        try {
                            DB.push("UPDATE user SET `username`='"
                                    + txt_username.getText() + "',`password`='"
                                    + hashPassword + "',`usertype`='"
                                    + usertype + "', `status`='" + status + "' WHERE `userid`='"
                                    + SystemConfigData.getActEmpId() + "'");
                            JOptionPane.showMessageDialog(this, "Details saved!");
                            this.dispose();
                        } catch (SQLIntegrityConstraintViolationException e) {
                            JOptionPane.showMessageDialog(this, "Employee already registered form this username. Try another username.");
                            txt_username.setText(null);
                            txt_username.grabFocus();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Passwords not match!");
                        txt_password.setText(null);
                        txt_repassword.setText(null);
                        txt_password.grabFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Password should be more than 5 charactors");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Fill all mandatory fields");

            }
        } else if (!combo_employee.getSelectedItem().toString().split("-")[0].equals(SystemConfigData.getActEmpId())) {
            try {
                try {
                    if (hashPassword.equals(hashRepassword)) {
                        DB.push("INSERT INTO user VALUES('"
                                + combo_employee.getSelectedItem().toString().split("-")[0] + "','"
                                + combo_usertype.getSelectedItem().toString().split("-")[0] + "','"
                                + txt_username.getText().trim() + "','"
                                + hashPassword + "','"
                                + status + "')");
                    } else {
                        JOptionPane.showMessageDialog(this, "Passwords not match!");
                    }
                } catch (SQLIntegrityConstraintViolationException e) {
                    DB.push("UPDATE user SET `usertype`='"
                            + combo_usertype.getSelectedItem().toString().split("-")[0] + "',`status`='"
                            + status + "' WHERE `userid`='"
                            + combo_employee.getSelectedItem().toString().split("-")[0] + "'");
                } catch (Exception e) {
                    e.printStackTrace();
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_btn_saveActionPerformed

    private void combo_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_employeeActionPerformed
        try {
            if (combo_employee.getSelectedItem().toString().split("-")[0].equals(SystemConfigData.getActEmpId())) {
                txt_username.setEditable(true);
                txt_password.setEditable(true);
                txt_repassword.setEditable(true);
            } else {
                txt_password.setEditable(false);
                txt_repassword.setEditable(false);
            }
            ResultSet rs = DB.search("SELECT * FROM user WHERE `userid`='"
                    + combo_employee.getSelectedItem().toString().split("-")[0] + "' AND `status`='1'");
            if (rs.next()) {
                txt_username.setForeground(Color.BLACK);
                txt_username.setText(rs.getString("username"));
            } else {
                txt_username.setForeground(Color.RED);
                txt_username.setText("NO ACTIVE USER ACCOUNT");
                txt_password.setEditable(true);
                txt_repassword.setEditable(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_combo_employeeActionPerformed

    private void txt_usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_usernameMouseClicked
        if(txt_username.getText().equals("NO ACTIVE USER ACCOUNT")){
            txt_username.setText(null);
        }
    }//GEN-LAST:event_txt_usernameMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SystemUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SystemUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SystemUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SystemUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SystemUserManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_save;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> combo_employee;
    private javax.swing.JComboBox<String> combo_usertype;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rad_active;
    private javax.swing.JRadioButton rad_inactive;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JPasswordField txt_repassword;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables

    private void loadUserType() {
        try {
            ResultSet rs = DB.search("SELECT * FROM usertype");
            Vector v = new Vector();
            while (rs.next()) {
                String usertype = rs.getString("id") + "-" + rs.getString("type");
                v.add(usertype);
            }
            combo_usertype.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadEmployee() {
        try {
            ResultSet rs = DB.search("SELECT `empid`,`fname`,`lname` FROM employee WHERE `status`='1'");
            Vector v = new Vector();
            while (rs.next()) {
                v.add(rs.getString("empid") + "-" + rs.getString("fname") + " " + rs.getString("lname"));
            }
            combo_employee.setModel(new DefaultComboBoxModel<>(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
